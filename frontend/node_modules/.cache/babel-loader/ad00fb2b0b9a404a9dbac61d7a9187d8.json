{"ast":null,"code":"var _jsxFileName = \"/home/marta/Dokumenty/DYPLOM/copper_shop_template/src/components/contact/form/Form.js\";\nimport React, { Component } from 'react';\nimport \"./_form.scss\";\n\nclass Form extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      name: \"\",\n      nameVal: false,\n      email: \"\",\n      emailVal: false,\n      message: \"\",\n      messageVal: false,\n      submitMessage: \"\",\n      errorClassName: \"form-error\",\n      submitHandle: false\n    };\n\n    this.emailValidate = email => {\n      const emailValidationCharSet = /^(([^<>()[\\]\\\\.,;:\\s@]+(\\.[^<>()[\\]\\\\.,;:\\s@]+)*)|(.+))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n      return emailValidationCharSet.test(email);\n    };\n\n    this.handleChangeName = e => {\n      this.setState({\n        name: e.target.value.replace(\" \", \"\")\n      });\n\n      if (this.state.name !== \"\") {\n        this.setState({\n          nameVal: true\n        });\n      }\n    };\n\n    this.handleChangeEmail = e => {\n      this.setState({\n        email: e.target.value\n      });\n\n      if (this.emailValidate(this.state.email)) {\n        this.setState({\n          emailVal: true\n        });\n      }\n    };\n\n    this.handleChangeMessage = e => {\n      this.setState({\n        message: e.target.value\n      });\n\n      if (this.state.message.length >= 49) {\n        this.setState({\n          messageVal: true\n        });\n      }\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      console.log(\"submit\");\n      const {\n        name,\n        email,\n        message\n      } = this.state;\n      let nameValVar;\n      let emailValVar;\n      let messageValVar;\n\n      if (name !== \"\") {\n        nameValVar = true;\n        this.setState({\n          nameVal: true\n        });\n      }\n\n      if (this.emailValidate(email)) {\n        emailValVar = true;\n        this.setState({\n          emailVal: true\n        });\n      }\n\n      if (message.length > 50) {\n        messageValVar = true;\n        this.setState({\n          messageVal: true\n        });\n      }\n\n      if (nameValVar && emailValVar && messageValVar) {\n        console.log(\"wysłano\");\n        this.setState({\n          submitMessage: \"Wiadomośc została wysłana. Skontaktujemy się wkrótce.\",\n          name: \"\",\n          email: \"\",\n          message: \"\"\n        }); // const url = \"http://localhost:3000/messages\";\n        //\n        // fetch(url,\n        //     {\n        //         headers: {\"Content-Type\": \"application/json\"},\n        //         method: 'POST',\n        //         dataType: \"json\",\n        //         body: JSON.stringify({name, email, message}),\n        //     })\n        // .then(resp =>{\n        //     if (!resp.ok) {\n        //         throw new Error(\"something is wrong...\");\n        //     }\n        //     else\n        //     {\n        //         this.setState({\n        //             submitMessage: \"Wiadomośc została wysłana. Skontaktujemy się wkrótce.\",\n        //             name: \"\",\n        //             email: \"\",\n        //             message: \"\",\n        //         });\n        //         console.log(resp);\n        //     }\n        // })\n        // .catch(err => console.error(err));\n      } else {\n        this.setState({\n          submitMessage: \"\",\n          submitHandle: true\n        });\n      }\n    };\n  }\n\n  render() {\n    const {\n      name,\n      email,\n      message,\n      nameVal,\n      emailVal,\n      messageVal,\n      errorClassName,\n      submitHandle,\n      submitMessage\n    } = this.state;\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"form\", {\n      className: \"form\",\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"legend\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 21\n      }\n    }, \"Skontaktuj si\\u0119 z nami\"), submitMessage ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-submit-message\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 25\n      }\n    }, submitMessage) : /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-submit-invisible\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(\"section\", {\n      className: \"form-section\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"fieldset\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      form: \"contact-name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 29\n      }\n    }, \"Twoje imi\\u0119:\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"Your name\",\n      id: \"contact-name\",\n      name: \"name\",\n      value: name,\n      onChange: this.handleChangeName,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 29\n      }\n    }), !nameVal && submitHandle ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-error\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 33\n      }\n    }, \"Podane imi\\u0119 jest nieprawid\\u0142owe!\") : /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-error-invisible\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 33\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      form: \"contact-email\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 29\n      }\n    }, \"E-mail:\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"E-mail\",\n      id: \"contact-email\",\n      name: \"email\",\n      value: email,\n      onChange: this.handleChangeEmail,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 29\n      }\n    }), !emailVal && submitHandle ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-error\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 33\n      }\n    }, \"Podany email jest nieprawid\\u0142owy!\") : /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-error-invisible\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 33\n      }\n    })), /*#__PURE__*/React.createElement(\"fieldset\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      form: \"contact-message\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 29\n      }\n    }, \"Twoja wiadomo\\u015B\\u0107:\"), /*#__PURE__*/React.createElement(\"textarea\", {\n      placeholder: \"Your message\",\n      id: \"message\",\n      name: \"message\",\n      value: message,\n      onChange: this.handleChangeMessage,\n      className: !messageVal & submitHandle && errorClassName,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 29\n      }\n    }), !messageVal && submitHandle ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-error\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 33\n      }\n    }, \"Wiadomo\\u015B\\u0107 musi zawiera\\u0107 min. 50 znak\\xF3w!\") : /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-error-invisible\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 33\n      }\n    }))), /*#__PURE__*/React.createElement(\"input\", {\n      className: \"form-btn\",\n      type: \"submit\",\n      value: \"Wy\\u015Blij wiadomo\\u015B\\u0107\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 21\n      }\n    })));\n  }\n\n}\n\nexport default Form;","map":{"version":3,"sources":["/home/marta/Dokumenty/DYPLOM/copper_shop_template/src/components/contact/form/Form.js"],"names":["React","Component","Form","state","name","nameVal","email","emailVal","message","messageVal","submitMessage","errorClassName","submitHandle","emailValidate","emailValidationCharSet","test","handleChangeName","e","setState","target","value","replace","handleChangeEmail","handleChangeMessage","length","handleSubmit","preventDefault","console","log","nameValVar","emailValVar","messageValVar","render"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport \"./_form.scss\"\n\nclass Form extends Component\n{\n    state =\n        {\n            name: \"\",\n            nameVal: false,\n            email: \"\",\n            emailVal: false,\n            message: \"\",\n            messageVal: false,\n            submitMessage: \"\",\n            errorClassName: \"form-error\",\n            submitHandle: false,\n        };\n\n    emailValidate = (email) =>\n    {\n        const emailValidationCharSet = /^(([^<>()[\\]\\\\.,;:\\s@]+(\\.[^<>()[\\]\\\\.,;:\\s@]+)*)|(.+))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n        return emailValidationCharSet.test(email);\n    };\n\n    handleChangeName = e =>\n    {\n        this.setState({\n            name: e.target.value.replace(\" \", \"\"),\n        });\n        if(this.state.name !== \"\")\n        {\n            this.setState({\n                nameVal: true,\n            })\n        }\n    };\n\n    handleChangeEmail = e =>\n    {\n        this.setState({\n            email: e.target.value\n        });\n        if(this.emailValidate(this.state.email))\n        {\n            this.setState({\n                emailVal: true,\n            })\n        }\n    };\n\n    handleChangeMessage = e =>\n    {\n        this.setState({\n            message: e.target.value,\n        });\n        if(this.state.message.length >= 49)\n        {\n            this.setState({\n                messageVal: true,\n            })\n        }\n    };\n\n    handleSubmit = e =>\n    {\n        e.preventDefault();\n\n        console.log(\"submit\");\n\n        const {name, email, message} = this.state;\n\n        let nameValVar;\n        let emailValVar;\n        let messageValVar;\n\n        if(name !== \"\")\n        {\n            nameValVar = true;\n            this.setState({\n                nameVal: true,\n            })\n        }\n\n        if(this.emailValidate(email))\n        {\n            emailValVar = true;\n            this.setState({\n                emailVal: true,\n            })\n        }\n\n        if(message.length > 50)\n        {\n            messageValVar = true;\n            this.setState({\n                messageVal: true,\n            })\n        }\n\n        if(nameValVar && emailValVar && messageValVar)\n        {\n            console.log(\"wysłano\");\n\n            this.setState({\n                submitMessage: \"Wiadomośc została wysłana. Skontaktujemy się wkrótce.\",\n                name: \"\",\n                email: \"\",\n                message: \"\",\n            });\n\n            // const url = \"http://localhost:3000/messages\";\n            //\n            // fetch(url,\n            //     {\n            //         headers: {\"Content-Type\": \"application/json\"},\n            //         method: 'POST',\n            //         dataType: \"json\",\n            //         body: JSON.stringify({name, email, message}),\n            //     })\n            // .then(resp =>{\n            //     if (!resp.ok) {\n            //         throw new Error(\"something is wrong...\");\n            //     }\n            //     else\n            //     {\n            //         this.setState({\n            //             submitMessage: \"Wiadomośc została wysłana. Skontaktujemy się wkrótce.\",\n            //             name: \"\",\n            //             email: \"\",\n            //             message: \"\",\n            //         });\n            //         console.log(resp);\n            //     }\n            // })\n            // .catch(err => console.error(err));\n        }\n        else\n        {\n            this.setState({\n                submitMessage: \"\",\n                submitHandle: true,\n            });\n        }\n    };\n\n\n    render() {\n        const {name, email, message, nameVal, emailVal, messageVal, errorClassName, submitHandle, submitMessage} = this.state;\n        return (\n            <>\n                <form className=\"form\" onSubmit={this.handleSubmit}>\n                    <legend>\n                        Skontaktuj się z nami\n                    </legend>\n                    {submitMessage ?\n                        <div className=\"form-submit-message\">\n                            {submitMessage}\n                        </div>:\n                        <div className=\"form-submit-invisible\" />}\n                    <section className=\"form-section\">\n                        <fieldset>\n                            <label form=\"contact-name\">Twoje imię:</label>\n                            <input type=\"text\"\n                                   placeholder=\"Your name\"\n                                   id=\"contact-name\"\n                                   name=\"name\"\n                                   value={name}\n                                   onChange={this.handleChangeName}/>\n                            {(!nameVal && submitHandle) ?\n                                <div className=\"form-error\">\n                                    Podane imię jest nieprawidłowe!\n                                </div> :\n                                <div className=\"form-error-invisible\"/>}\n                            <label form=\"contact-email\">E-mail:</label>\n                            <input type=\"text\"\n                                   placeholder=\"E-mail\"\n                                   id=\"contact-email\"\n                                   name=\"email\"\n                                   value={email}\n                                   onChange={this.handleChangeEmail}/>\n                            {(!emailVal && submitHandle) ?\n                                <div className=\"form-error\">\n                                    Podany email jest nieprawidłowy!\n                                </div> :\n                                <div className=\"form-error-invisible\"/>}\n                        </fieldset>\n                        <fieldset>\n                            <label form=\"contact-message\">Twoja wiadomość:</label>\n                            <textarea placeholder=\"Your message\"\n                                      id=\"message\"\n                                      name=\"message\"\n                                      value={message}\n                                      onChange={this.handleChangeMessage}\n                                      className={(!messageVal & submitHandle) && errorClassName}/>\n                            {(!messageVal && submitHandle) ?\n                                <div className=\"form-error\">\n                                    Wiadomość musi zawierać min. 50 znaków!\n                                </div> :\n                                <div className=\"form-error-invisible\"/>}\n                        </fieldset>\n                    </section>\n                    <input className=\"form-btn\" type=\"submit\" value=\"Wyślij wiadomość\"/>\n                </form>\n            </>\n        )\n    }\n}\n\nexport default Form;"]},"metadata":{},"sourceType":"module"}